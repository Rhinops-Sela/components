---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local
spec:
  selector:
    matchLabels:
      run: dynamodb-local
  replicas: 1
  template:
    metadata:
      labels:
        run: dynamodb-local
    spec:
      tolerations:
      - key: "system"
        operator: "Equal"
        value: "true"
      volumes:
      - name: dynamodb-data
        persistentVolumeClaim:
          claimName: dynamodb-pvc
      initContainers:
      - name: take-data-ownership
        image: alpine:3.6
        # Give `dynamodblocal` user (id 1000) permissions a mounted volume
        command:
        - chown
        - -R
        - 1000:1000
        - /home/dynamodblocal/data"
        volumeMounts:
        - mountPath: /home/dynamodblocal/data"
          name: dynamodb-data
      containers:
      - name: dynamodb-local
        image: amazon/dynamodb-local
        command: ["java"]
        args: ["-jar", "DynamoDBLocal.jar", "-sharedDb","-dbPath", "/home/dynamodblocal/data/"]
        volumeMounts:
        - mountPath: "/home/dynamodblocal/data"
          name: dynamodb-data
        ports:
        - containerPort: 8000
      nodeSelector:
        role: system-workers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local-admin
spec:
  selector:
    matchLabels:
      run:  dynamodb-local-admin
  replicas: 1
  template:
    metadata:
      labels:
        run:  dynamodb-local-admin
    spec:
      tolerations:
      - key: "system"
        operator: "Equal"
        value: "true"
      containers:
      - name:  dynamodb-local-admin
        image: aaronshaf/dynamodb-admin
        env:
        - name: DYNAMO_ENDPOINT
          value: "dynamodb.example.com"
        ports:
        - containerPort: 8001
      nodeSelector:
        role: system-workers